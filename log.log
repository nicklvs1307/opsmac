> Feedeliza+@1.0.0 start
> node backend/server.js
Swagger JSDoc options.apis: [ '/app/backend/routes/*.js' ]
Generated Swagger Specs (first 500 chars): {
  "openapi": "3.0.0",
  "info": {
    "title": "Check Test API",
    "version": "1.0.0",
    "description": "API documentation for the Check Test application."
  },
  "servers": [
    {
      "url": "https://feedelizaapi.towersfy.com/api",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Public API",
      "description": "Endpoints acessÃ­veis via API Token para integraÃ§Ã£o externa."
    },
    {
      "name": "Admin",
      "description": "Gerenciamento de us
âœ… ConexÃ£o com banco de dados estabelecida
ðŸš€ Servidor rodando na porta 5000
ðŸ“Š Dashboard: https://feedelizapro.towersfy.com
ðŸ”— API: https://feedelizaapi.towersfy.com/api
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Erro ao buscar recompensa: Error
    at Query.run (/app/node_modules/sequelize/lib/dialects/postgres/query.js:50:25)
    at /app/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async PostgresQueryInterface.select (/app/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async Reward.findAll (/app/node_modules/sequelize/lib/model.js:1140:21)
    at async Reward.findOne (/app/node_modules/sequelize/lib/model.js:1240:12)
    at async /app/backend/routes/rewards.js:220:20 {
  name: 'SequelizeDatabaseError',
  parent: error: invalid input syntax for type uuid: "analytics"
      at Parser.parseErrorMessage (/app/node_modules/pg-protocol/dist/parser.js:285:98)
      at Parser.handlePacket (/app/node_modules/pg-protocol/dist/parser.js:122:29)
      at Parser.parse (/app/node_modules/pg-protocol/dist/parser.js:35:38)
      at Socket.<anonymous> (/app/node_modules/pg-protocol/dist/index.js:11:42)
      at Socket.emit (node:events:524:28)
      at addChunk (node:internal/streams/readable:561:12)
      at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)
      at Readable.push (node:internal/streams/readable:392:5)
      at TCP.onStreamRead (node:internal/stream_base_commons:191:23) {
    length: 109,
    severity: 'ERROR',
    code: '22P02',
    detail: undefined,
    hint: undefined,
    position: '982',
    internalPosition: undefined,
    internalQuery: undefined,
    where: undefined,
    schema: undefined,
    table: undefined,
    column: undefined,
    dataType: undefined,
    constraint: undefined,
    file: 'uuid.c',
    line: '134',
    routine: 'string_to_uuid',
    sql: `SELECT "Reward"."id", "Reward"."title", "Reward"."description", "Reward"."reward_type", "Reward"."value", "Reward"."points_required", "Reward"."max_uses_per_customer", "Reward"."total_uses_limit", "Reward"."current_uses", "Reward"."minimum_purchase", "Reward"."applicable_items", "Reward"."excluded_items", "Reward"."valid_from", "Reward"."valid_until", "Reward"."days_valid", "Reward"."auto_apply", "Reward"."requires_approval", "Reward"."is_active", "Reward"."is_featured", "Reward"."image", "Reward"."terms_conditions", "Reward"."trigger_conditions", "Reward"."notification_settings", "Reward"."analytics", "Reward"."restaurant_id", "Reward"."customer_id", "Reward"."created_by", "Reward"."created_at" AS "createdAt", "Reward"."updated_at" AS "updatedAt", "restaurant"."id" AS "restaurant.id", "restaurant"."name" AS "restaurant.name" FROM "rewards" AS "Reward" LEFT OUTER JOIN "restaurants" AS "restaurant" ON "Reward"."restaurant_id" = "restaurant"."id" WHERE "Reward"."id" = 'analytics' AND "Reward"."restaurant_id" = '0e517dc5-4881-45aa-996e-0365012000bc';`,
    parameters: undefined
  },
  original: error: invalid input syntax for type uuid: "analytics"
      at Parser.parseErrorMessage (/app/node_modules/pg-protocol/dist/parser.js:285:98)
      at Parser.handlePacket (/app/node_modules/pg-protocol/dist/parser.js:122:29)
      at Parser.parse (/app/node_modules/pg-protocol/dist/parser.js:35:38)
      at Socket.<anonymous> (/app/node_modules/pg-protocol/dist/index.js:11:42)
      at Socket.emit (node:events:524:28)
      at addChunk (node:internal/streams/readable:561:12)
      at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)
      at Readable.push (node:internal/streams/readable:392:5)
      at TCP.onStreamRead (node:internal/stream_base_commons:191:23) {
    length: 109,
    severity: 'ERROR',
    code: '22P02',
    detail: undefined,
    hint: undefined,
    position: '982',
    internalPosition: undefined,
    internalQuery: undefined,
    where: undefined,
    schema: undefined,
    table: undefined,
    column: undefined,
    dataType: undefined,
    constraint: undefined,
    file: 'uuid.c',
    line: '134',
    routine: 'string_to_uuid',
    sql: `SELECT "Reward"."id", "Reward"."title", "Reward"."description", "Reward"."reward_type", "Reward"."value", "Reward"."points_required", "Reward"."max_uses_per_customer", "Reward"."total_uses_limit", "Reward"."current_uses", "Reward"."minimum_purchase", "Reward"."applicable_items", "Reward"."excluded_items", "Reward"."valid_from", "Reward"."valid_until", "Reward"."days_valid", "Reward"."auto_apply", "Reward"."requires_approval", "Reward"."is_active", "Reward"."is_featured", "Reward"."image", "Reward"."terms_conditions", "Reward"."trigger_conditions", "Reward"."notification_settings", "Reward"."analytics", "Reward"."restaurant_id", "Reward"."customer_id", "Reward"."created_by", "Reward"."created_at" AS "createdAt", "Reward"."updated_at" AS "updatedAt", "restaurant"."id" AS "restaurant.id", "restaurant"."name" AS "restaurant.name" FROM "rewards" AS "Reward" LEFT OUTER JOIN "restaurants" AS "restaurant" ON "Reward"."restaurant_id" = "restaurant"."id" WHERE "Reward"."id" = 'analytics' AND "Reward"."restaurant_id" = '0e517dc5-4881-45aa-996e-0365012000bc';`,
    parameters: undefined
  },
  sql: `SELECT "Reward"."id", "Reward"."title", "Reward"."description", "Reward"."reward_type", "Reward"."value", "Reward"."points_required", "Reward"."max_uses_per_customer", "Reward"."total_uses_limit", "Reward"."current_uses", "Reward"."minimum_purchase", "Reward"."applicable_items", "Reward"."excluded_items", "Reward"."valid_from", "Reward"."valid_until", "Reward"."days_valid", "Reward"."auto_apply", "Reward"."requires_approval", "Reward"."is_active", "Reward"."is_featured", "Reward"."image", "Reward"."terms_conditions", "Reward"."trigger_conditions", "Reward"."notification_settings", "Reward"."analytics", "Reward"."restaurant_id", "Reward"."customer_id", "Reward"."created_by", "Reward"."created_at" AS "createdAt", "Reward"."updated_at" AS "updatedAt", "restaurant"."id" AS "restaurant.id", "restaurant"."name" AS "restaurant.name" FROM "rewards" AS "Reward" LEFT OUTER JOIN "restaurants" AS "restaurant" ON "Reward"."restaurant_id" = "restaurant"."id" WHERE "Reward"."id" = 'analytics' AND "Reward"."restaurant_id" = '0e517dc5-4881-45aa-996e-0365012000bc';`,
  parameters: {}
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}