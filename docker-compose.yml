# docker-compose.yml
version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    image: feedeliza-backend:latest
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:b74996144735db08d6e091f460df4184@postgres:5432/nomedaaplicacao
      - JWT_SECRET=bJ0c8J5UXhGVsI3zbqMnOAQsCGk8BNBG
      # Adicione outras vari√°veis de ambiente do seu backend aqui, se houver
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.backend.rule=Host(`feedelizaapi.towersfy.com`)"
        - "traefik.http.routers.backend.entrypoints=websecure"
        - "traefik.http.routers.backend.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.backend.loadbalancer.server.port=5000"
    networks:
      - towersfy_network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    image: feedeliza-frontend:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.frontend.rule=Host(`feedelizapro.towersfy.com`)"
        - "traefik.http.routers.frontend.entrypoints=websecure"
        - "traefik.http.routers.frontend.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - towersfy_network

networks:
  towersfy_network:
    external: true # Usando a rede existente do Traefik