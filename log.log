[+] Building 388.0s (17/17) FINISHED                                                                                                  docker:default
 => [internal] load build definition from Dockerfile.frontend                                                                                   0.0s
 => => transferring dockerfile: 941B                                                                                                            0.0s
 => [internal] load metadata for docker.io/library/nginx:alpine                                                                                 0.9s
 => [internal] load metadata for docker.io/library/node:18-alpine                                                                               0.8s
 => [internal] load .dockerignore                                                                                                               0.0s
 => => transferring context: 243B                                                                                                               0.0s
 => [builder 1/8] FROM docker.io/library/node:18-alpine@sha256:8d6421d663b4c28fd3ebc498332f249011d118945588d0a35cb9bc4b8ca09d9e                 0.0s
 => [internal] load build context                                                                                                               0.1s
 => => transferring context: 24.97kB                                                                                                            0.1s
 => CACHED [stage-1 1/3] FROM docker.io/library/nginx:alpine@sha256:42a516af16b852e33b7682d5ef8acbd5d13fe08fecadc7ed98605ba5e3b26ab8            0.0s
 => CACHED [builder 2/8] WORKDIR /app/frontend                                                                                                  0.0s
 => [builder 3/8] RUN apk add --no-cache python3 make g++ libc6-compat                                                                          4.4s
 => [builder 4/8] COPY frontend/package*.json ./                                                                                                0.1s
 => [builder 5/8] RUN npm cache clean --force && npm install                                                                                  176.0s
 => [builder 6/8] COPY frontend/src ./src                                                                                                       0.1s
 => [builder 7/8] COPY frontend/public ./public                                                                                                 0.1s
 => [builder 8/8] RUN npm run build && ls -la /app/frontend/build                                                                             168.8s
 => [stage-1 2/3] COPY --from=builder /app/frontend/build /usr/share/nginx/html                                                                 0.1s
 => [stage-1 3/3] COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf                                                                       0.1s
 => exporting to image                                                                                                                          0.4s
 => => exporting layers                                                                                                                         0.3s
 => => writing image sha256:41ce178711459644ac788354161f81ba88d5e6182a80d9441e2e4ba3de2ff6b3                                                    0.0s
 => => naming to docker.io/library/feedeliza-frontend:latest