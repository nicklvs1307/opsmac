    afterUpsert: [Function (anonymous)],
    beforeBulkCreate: [Function (anonymous)],
    afterBulkCreate: [Function (anonymous)],
    beforeBulkDestroy: [Function (anonymous)],
    afterBulkDestroy: [Function (anonymous)],
    beforeBulkRestore: [Function (anonymous)],
    afterBulkRestore: [Function (anonymous)],
    beforeBulkUpdate: [Function (anonymous)],
    afterBulkUpdate: [Function (anonymous)],
    beforeFind: [Function (anonymous)],
    beforeFindAfterExpandIncludeAll: [Function (anonymous)],
    beforeFindAfterOptions: [Function (anonymous)],
    afterFind: [Function (anonymous)],
    beforeCount: [Function (anonymous)],
    beforeDefine: [Function (anonymous)],
    afterDefine: [Function (anonymous)],
    beforeInit: [Function (anonymous)],
    afterInit: [Function (anonymous)],
    beforeAssociate: [Function (anonymous)],
    afterAssociate: [Function (anonymous)],
    beforeConnect: [Function (anonymous)],
    afterConnect: [Function (anonymous)],
    beforeDisconnect: [Function (anonymous)],
    afterDisconnect: [Function (anonymous)],
    beforePoolAcquire: [Function (anonymous)],
    afterPoolAcquire: [Function (anonymous)],
    beforeSync: [Function (anonymous)],
    afterSync: [Function (anonymous)],
    beforeBulkSync: [Function (anonymous)],
    afterBulkSync: [Function (anonymous)],
    beforeQuery: [Function (anonymous)],
    afterQuery: [Function (anonymous)],
    Error: [class BaseError extends Error],
    AccessDeniedError: [class AccessDeniedError extends ConnectionError],
    AggregateError: [class AggregateError extends BaseError],
    AssociationError: [class AssociationError extends BaseError],
    AsyncQueueError: [class AsyncQueueError extends BaseError],
    BaseError: [class BaseError extends Error],
    BulkRecordError: [class BulkRecordError extends BaseError],
    ConnectionAcquireTimeoutError: [class ConnectionAcquireTimeoutError extends ConnectionError],
    ConnectionError: [class ConnectionError extends BaseError],
    ConnectionRefusedError: [class ConnectionRefusedError extends ConnectionError],
    ConnectionTimedOutError: [class ConnectionTimedOutError extends ConnectionError],
    DatabaseError: [class DatabaseError extends BaseError],
    EagerLoadingError: [class EagerLoadingError extends BaseError],
    EmptyResultError: [class EmptyResultError extends BaseError],
    ExclusionConstraintError: [class ExclusionConstraintError extends DatabaseError],
    ForeignKeyConstraintError: [class ForeignKeyConstraintError extends DatabaseError],
    HostNotFoundError: [class HostNotFoundError extends ConnectionError],
    HostNotReachableError: [class HostNotReachableError extends ConnectionError],
    InstanceError: [class InstanceError extends BaseError],
    InvalidConnectionError: [class InvalidConnectionError extends ConnectionError],
    OptimisticLockError: [class OptimisticLockError extends BaseError],
    QueryError: [class QueryError extends BaseError],
    SequelizeScopeError: [class SequelizeScopeError extends BaseError],
    TimeoutError: [class TimeoutError extends DatabaseError],
    UniqueConstraintError: [class UniqueConstraintError extends ValidationError],
    UnknownConstraintError: [class UnknownConstraintError extends DatabaseError],
    ValidationError: [class ValidationError extends BaseError],
    ValidationErrorItem: [class ValidationErrorItem] {
      TypeStringMap: [Object],
      Origins: [Object]
    },
    ValidationErrorItemOrigin: { CORE: 'CORE', DB: 'DB', FUNCTION: 'FUNCTION' },
    ValidationErrorItemType: {
      'notnull violation': 'CORE',
      'string violation': 'CORE',
      'unique violation': 'DB',
      'validation error': 'FUNCTION'
    },
    Sequelize: [Circular *8],
    default: [Circular *8]
  },
  testConnection: [AsyncFunction (anonymous)],
  syncDatabase: [AsyncFunction (anonymous)]
}
ðŸš€ Servidor rodando na porta 5000
Redis Client Connected
DEBUG: authMiddleware - error: TypeError: Cannot read properties of undefined (reading 'findByPk')
    at Object.getMe (/app/src/domains/auth/auth.service.js:112:33)
    at authMiddleware (/app/src/middleware/authMiddleware.js:25:44)
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/app/node_modules/express/lib/router/index.js:328:13)
    at /app/node_modules/express/lib/router/index.js:286:9
    at Function.process_params (/app/node_modules/express/lib/router/index.js:346:12)
    at next (/app/node_modules/express/lib/router/index.js:280:10)
    at Function.handle (/app/node_modules/express/lib/router/index.js:175:3)
    at router (/app/node_modules/express/lib/router/index.js:47:12)
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)
TypeError: Cannot read properties of undefined (reading 'findByPk')
    at Object.getMe (/app/src/domains/auth/auth.service.js:112:33)
    at authMiddleware (/app/src/middleware/authMiddleware.js:25:44)
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (/app/node_modules/express/lib/router/index.js:328:13)
    at /app/node_modules/express/lib/router/index.js:286:9
    at Function.process_params (/app/node_modules/express/lib/router/index.js:346:12)
    at next (/app/node_modules/express/lib/router/index.js:280:10)
    at Function.handle (/app/node_modules/express/lib/router/index.js:175:3)
    at router (/app/node_modules/express/lib/router/index.js:47:12)
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)