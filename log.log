> Feedeliza+@1.0.0 start
> node backend/server.js
Swagger JSDoc options.apis: [ '/app/backend/routes/*.js' ]
Generated Swagger Specs (first 500 chars): {
  "openapi": "3.0.0",
  "info": {
    "title": "Check Test API",
    "version": "1.0.0",
    "description": "API documentation for the Check Test application."
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Public API",
      "description": "Endpoints acessÃ­veis via API Token para integraÃ§Ã£o externa."
    },
    {
      "name": "Admin",
      "description": "Gerenciamento de usuÃ¡rios e res
âœ… ConexÃ£o com banco de dados estabelecida
ðŸš€ Servidor rodando na porta 5000
ðŸ“Š Dashboard: https://feedelizapro.towersfy.com
ðŸ”— API: https://feedelizaapi.towersfy.com/api
Auth Middleware - req.user (after population): {
  userId: '00b75d88-761d-4fd7-af99-1bc96173c395',
  email: 'admin1@example.com',
  role: 'super_admin',
  name: 'Super Admin',
  restaurant_id: null
}
Auth Middleware - req.user (after population): {
  userId: '00b75d88-761d-4fd7-af99-1bc96173c395',
  email: 'admin1@example.com',
  role: 'super_admin',
  name: 'Super Admin',
  restaurant_id: null
}
Auth Middleware - req.user (after population): {
  userId: '00b75d88-761d-4fd7-af99-1bc96173c395',
  email: 'admin1@example.com',
  role: 'super_admin',
  name: 'Super Admin',
  restaurant_id: null
}
Auth Middleware - req.user (after population): {
  userId: '00b75d88-761d-4fd7-af99-1bc96173c395',
  email: 'admin1@example.com',
  role: 'super_admin',
  name: 'Super Admin',
  restaurant_id: null
}
Auth Middleware - req.user (after population): {
  userId: '00b75d88-761d-4fd7-af99-1bc96173c395',
  email: 'admin1@example.com',
  role: 'super_admin',
  name: 'Super Admin',
  restaurant_id: null
}
Auth Middleware - req.user (after population): {
  userId: '00b75d88-761d-4fd7-af99-1bc96173c395',
  email: 'admin1@example.com',
  role: 'super_admin',
  name: 'Super Admin',
  restaurant_id: null
}
Auth Middleware - req.user (after population): {
  userId: '00b75d88-761d-4fd7-af99-1bc96173c395',
  email: 'admin1@example.com',
  role: 'super_admin',
  name: 'Super Admin',
  restaurant_id: null
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
/app/backend/routes/checkin.js:510
  if (period !== 'all') {
  ^
ReferenceError: period is not defined
    at /app/backend/routes/checkin.js:510:3
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)
    at next (/app/node_modules/express/lib/router/route.js:149:13)
    at middleware (/app/node_modules/express-validator/lib/middlewares/check.js:16:13)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
Node.js v20.19.4

> Feedeliza+@1.0.0 start
> node backend/server.js
Swagger JSDoc options.apis: [ '/app/backend/routes/*.js' ]
Generated Swagger Specs (first 500 chars): {
  "openapi": "3.0.0",
  "info": {
    "title": "Check Test API",
    "version": "1.0.0",
    "description": "API documentation for the Check Test application."
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Public API",
      "description": "Endpoints acessÃ­veis via API Token para integraÃ§Ã£o externa."
    },
    {
      "name": "Admin",
      "description": "Gerenciamento de usuÃ¡rios e res
âœ… ConexÃ£o com banco de dados estabelecida
ðŸš€ Servidor rodando na porta 5000
ðŸ“Š Dashboard: https://feedelizapro.towersfy.com
ðŸ”— API: https://feedelizaapi.towersfy.com/api
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
/app/backend/routes/checkin.js:510
  if (period !== 'all') {
  ^
ReferenceError: period is not defined
    at /app/backend/routes/checkin.js:510:3
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)
    at next (/app/node_modules/express/lib/router/route.js:149:13)
    at middleware (/app/node_modules/express-validator/lib/middlewares/check.js:16:13)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
Node.js v20.19.4

> Feedeliza+@1.0.0 start
> node backend/server.js
Swagger JSDoc options.apis: [ '/app/backend/routes/*.js' ]
Generated Swagger Specs (first 500 chars): {
  "openapi": "3.0.0",
  "info": {
    "title": "Check Test API",
    "version": "1.0.0",
    "description": "API documentation for the Check Test application."
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Public API",
      "description": "Endpoints acessÃ­veis via API Token para integraÃ§Ã£o externa."
    },
    {
      "name": "Admin",
      "description": "Gerenciamento de usuÃ¡rios e res
âœ… ConexÃ£o com banco de dados estabelecida
ðŸš€ Servidor rodando na porta 5000
ðŸ“Š Dashboard: https://feedelizapro.towersfy.com
ðŸ”— API: https://feedelizaapi.towersfy.com/api
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
Auth Middleware - req.user (after population): {
  userId: '211aab5d-fb9a-421b-991c-fcda8bc44051',
  email: 'lucas@teste.com',
  role: 'owner',
  name: 'Lucas Niquele',
  restaurant_id: '0e517dc5-4881-45aa-996e-0365012000bc'
}
/app/backend/routes/checkin.js:510
  if (period !== 'all') {
  ^
ReferenceError: period is not defined
    at /app/backend/routes/checkin.js:510:3
    at Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)
    at next (/app/node_modules/express/lib/router/route.js:149:13)
    at middleware (/app/node_modules/express-validator/lib/middlewares/check.js:16:13)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
Node.js v20.19.4

