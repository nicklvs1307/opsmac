> Feedeliza+@1.0.0 start
> node backend/server.js
Swagger JSDoc options.apis: [ '/app/backend/routes/*.js' ]
Generated Swagger Specs (first 500 chars): {
  "openapi": "3.0.0",
  "info": {
    "title": "Check Test API",
    "version": "1.0.0",
    "description": "API documentation for the Check Test application."
  },
  "servers": [
    {
      "url": "http://localhost:5000/api",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Public API",
      "description": "Endpoints acessÃ­veis via API Token para integraÃ§Ã£o externa."
    },
    {
      "name": "Admin",
      "description": "Gerenciamento de usuÃ¡rios e res
âœ… ConexÃ£o com banco de dados estabelecida
ðŸš€ Servidor rodando na porta 5000
ðŸ“Š Dashboard: https://feedelizapro.towersfy.com
ðŸ”— API: https://feedelizaapi.towersfy.com/api
Erro ao criar restaurante (Admin): ValidationError [SequelizeValidationError]: notNull Violation: Restaurant.address cannot be null,
notNull Violation: Restaurant.city cannot be null,
notNull Violation: Restaurant.state cannot be null
    at InstanceValidator._validate (/app/node_modules/sequelize/lib/instance-validator.js:50:13)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async InstanceValidator._validateAndRunHooks (/app/node_modules/sequelize/lib/instance-validator.js:60:7)
    at async InstanceValidator.validate (/app/node_modules/sequelize/lib/instance-validator.js:54:12)
    at async Restaurant.save (/app/node_modules/sequelize/lib/model.js:2426:7)
    at async Restaurant.create (/app/node_modules/sequelize/lib/model.js:1362:12)
    at async /app/backend/routes/admin.js:192:24 {
  errors: [
    ValidationErrorItem {
      message: 'Restaurant.address cannot be null',
      type: 'notNull Violation',
      path: 'address',
      value: null,
      origin: 'CORE',
      instance: [Restaurant],
      validatorKey: 'is_null',
      validatorName: null,
      validatorArgs: []
    },
    ValidationErrorItem {
      message: 'Restaurant.city cannot be null',
      type: 'notNull Violation',
      path: 'city',
      value: null,
      origin: 'CORE',
      instance: [Restaurant],
      validatorKey: 'is_null',
      validatorName: null,
      validatorArgs: []
    },
    ValidationErrorItem {
      message: 'Restaurant.state cannot be null',
      type: 'notNull Violation',
      path: 'state',
      value: null,
      origin: 'CORE',
      instance: [Restaurant],
      validatorKey: 'is_null',
      validatorName: null,
      validatorArgs: []
    }
  ]
}